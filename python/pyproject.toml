# This file was taken from https://github.com/FEniCS/dolfinx project (LGPL-3.0 license)
# See the license in ThirdPartyNotices.txt

# NOTE: The QUGaR Python interface must be built without build
# isolation (PEP517) due to its runtime and build time dependency on
# system built petsc4py and mpi4py.
# NOTE: petsc4py is an optional build dependency, therefore we don't
# list it here.
# pip install -r build-requirements.txt
[build-system]
requires = ["scikit-build-core[pyproject]>=0.5", "nanobind>=2.0.0"]
build-backend = "scikit_build_core.build"

[project]
name = "QUGaR"
version = "0.1.3"
description = "QUGaR Python interface"
readme = "README.md"
requires-python = ">=3.10.0"
license = { file = "../LICENSE" }
authors = [{ name = "Pablo Antolin", email = "pablo.antolin@epfl.ch" }]
dependencies = ["numpy>=1.21"]

[project.optional-dependencies]
test = ["pytest"]
docs = [
      "sphinx",
      "sphinx-rtd-dark-mode",
      "breathe",
      "jupytext",
      "markdown",
      "myst_parser",
]
lint = ["ruff", "mypy"]
pyvista = ["pyvista"]
fenicsx = [
      "fenics-dolfinx>=0.9.0,<0.10.0",
      "fenics-basix>=0.9.0,<0.10.0",
      "fenics-ffcx>=0.9.0,<0.10.0",
      "fenics-ufl>=2024.2.0,<2024.3.0",
]
all = [
      "qugar[docs]",
      "qugar[fenicsx]",
      "qugar[pyvista]",
      "qugar[lint]",
      "qugar[test]",
]

[tool.scikit-build]
wheel.packages = ["qugar"]
sdist.exclude = ["*.cpp"]
cmake.build-type = "Release"
wheel.license-files = ["../LICENSE"]

[tool.pytest]
junit_family = "xunit2"

# [tool.pytest.ini_options]
# markers = [
#       "skip_in_parallel: marks tests that should be run in serial only.",
#       "petsc4py: tests that require PETSc/petsc4py (deselect with '-m \"not petsc4py\"').",
#       "adios2: tests that require Adios2 (deselect with '-m \"not adios2\"').",
#       "xfail_win32_complex: expected failures for complex numbers in Win32.",
# ]


[tool.mypy]
# Suggested at https://blog.wolt.com/engineering/2021/09/30/professional-grade-mypy-configuration/
# Goal would be to make all of the below True long-term
disallow_untyped_defs = false
disallow_any_unimported = false
no_implicit_optional = false
check_untyped_defs = false
warn_return_any = false
warn_unused_ignores = false
show_error_codes = true
ignore_missing_imports = true


[tool.ruff]
line-length = 100
indent-width = 4

[tool.ruff.lint]
select = [
      # Pyflakes
      "F",
      # Pycodestyle
      "E",
      "W",
      # isort
      "I001",
]

[tool.ruff.lint.isort]
known-first-party = ["qugar"]
known-third-party = [
      "basix",
      "dolfinx",
      "ffcx",
      "ufl",
      "numba",
      "numpy",
      "pytest",
      "pyvista",
      "pyamg",
]
section-order = [
      "future",
      "standard-library",
      "mpi",
      "third-party",
      "first-party",
      "local-folder",
]

[tool.ruff.lint.isort.sections]
"mpi" = ["mpi4py", "petsc4py"]
